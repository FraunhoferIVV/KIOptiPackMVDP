# coding: utf-8

"""
    management-api

    REST API documentation for the management-api  # noqa: E501

    OpenAPI spec version: 0.0.1-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ProvisionerWebhookRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'api_key_jwt': 'str',
        'asset_id': 'str',
        'content_data_address': 'DataAddress',
        'has_token': 'bool',
        'resource_definition_id': 'str',
        'resource_name': 'str'
    }

    attribute_map = {
        'api_key_jwt': 'apiKeyJwt',
        'asset_id': 'assetId',
        'content_data_address': 'contentDataAddress',
        'has_token': 'hasToken',
        'resource_definition_id': 'resourceDefinitionId',
        'resource_name': 'resourceName'
    }

    def __init__(self, api_key_jwt=None, asset_id=None, content_data_address=None, has_token=None,
                 resource_definition_id=None, resource_name=None):  # noqa: E501
        """ProvisionerWebhookRequest - a model defined in Swagger"""  # noqa: E501
        self._api_key_jwt = None
        self._asset_id = None
        self._content_data_address = None
        self._has_token = None
        self._resource_definition_id = None
        self._resource_name = None
        self.discriminator = None
        self.api_key_jwt = api_key_jwt
        self.asset_id = asset_id
        self.content_data_address = content_data_address
        if has_token is not None:
            self.has_token = has_token
        self.resource_definition_id = resource_definition_id
        self.resource_name = resource_name

    @property
    def api_key_jwt(self):
        """Gets the api_key_jwt of this ProvisionerWebhookRequest.  # noqa: E501


        :return: The api_key_jwt of this ProvisionerWebhookRequest.  # noqa: E501
        :rtype: str
        """
        return self._api_key_jwt

    @api_key_jwt.setter
    def api_key_jwt(self, api_key_jwt):
        """Sets the api_key_jwt of this ProvisionerWebhookRequest.


        :param api_key_jwt: The api_key_jwt of this ProvisionerWebhookRequest.  # noqa: E501
        :type: str
        """
        if api_key_jwt is None:
            raise ValueError("Invalid value for `api_key_jwt`, must not be `None`")  # noqa: E501

        self._api_key_jwt = api_key_jwt

    @property
    def asset_id(self):
        """Gets the asset_id of this ProvisionerWebhookRequest.  # noqa: E501


        :return: The asset_id of this ProvisionerWebhookRequest.  # noqa: E501
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this ProvisionerWebhookRequest.


        :param asset_id: The asset_id of this ProvisionerWebhookRequest.  # noqa: E501
        :type: str
        """
        if asset_id is None:
            raise ValueError("Invalid value for `asset_id`, must not be `None`")  # noqa: E501

        self._asset_id = asset_id

    @property
    def content_data_address(self):
        """Gets the content_data_address of this ProvisionerWebhookRequest.  # noqa: E501


        :return: The content_data_address of this ProvisionerWebhookRequest.  # noqa: E501
        :rtype: DataAddress
        """
        return self._content_data_address

    @content_data_address.setter
    def content_data_address(self, content_data_address):
        """Sets the content_data_address of this ProvisionerWebhookRequest.


        :param content_data_address: The content_data_address of this ProvisionerWebhookRequest.  # noqa: E501
        :type: DataAddress
        """
        if content_data_address is None:
            raise ValueError("Invalid value for `content_data_address`, must not be `None`")  # noqa: E501

        self._content_data_address = content_data_address

    @property
    def has_token(self):
        """Gets the has_token of this ProvisionerWebhookRequest.  # noqa: E501


        :return: The has_token of this ProvisionerWebhookRequest.  # noqa: E501
        :rtype: bool
        """
        return self._has_token

    @has_token.setter
    def has_token(self, has_token):
        """Sets the has_token of this ProvisionerWebhookRequest.


        :param has_token: The has_token of this ProvisionerWebhookRequest.  # noqa: E501
        :type: bool
        """

        self._has_token = has_token

    @property
    def resource_definition_id(self):
        """Gets the resource_definition_id of this ProvisionerWebhookRequest.  # noqa: E501


        :return: The resource_definition_id of this ProvisionerWebhookRequest.  # noqa: E501
        :rtype: str
        """
        return self._resource_definition_id

    @resource_definition_id.setter
    def resource_definition_id(self, resource_definition_id):
        """Sets the resource_definition_id of this ProvisionerWebhookRequest.


        :param resource_definition_id: The resource_definition_id of this ProvisionerWebhookRequest.  # noqa: E501
        :type: str
        """
        if resource_definition_id is None:
            raise ValueError("Invalid value for `resource_definition_id`, must not be `None`")  # noqa: E501

        self._resource_definition_id = resource_definition_id

    @property
    def resource_name(self):
        """Gets the resource_name of this ProvisionerWebhookRequest.  # noqa: E501


        :return: The resource_name of this ProvisionerWebhookRequest.  # noqa: E501
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this ProvisionerWebhookRequest.


        :param resource_name: The resource_name of this ProvisionerWebhookRequest.  # noqa: E501
        :type: str
        """
        if resource_name is None:
            raise ValueError("Invalid value for `resource_name`, must not be `None`")  # noqa: E501

        self._resource_name = resource_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProvisionerWebhookRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProvisionerWebhookRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
